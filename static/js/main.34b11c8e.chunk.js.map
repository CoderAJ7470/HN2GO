{"version":3,"sources":["CSS/header.module.css","Services/api.js","Services/classManager.js","Services/timeConverter.js","Components/Item.jsx","Services/scroll.js","Components/Items.jsx","Components/Header.jsx","App.js","serviceWorker.js","index.js","CSS/item.module.css","CSS/items.module.css"],"names":["module","exports","baseURL","newItemsURL","topItemsURL","bestItemsURL","itemURL","MAX_ITEMS","GET_MAX_ITEMS","getItem","storyID","a","axios","get","then","data","result","getNewItemIDs","length","getTopItemIDs","console","log","getBestItemIDs","manageButtonClasses","type","document","getElementById","classList","add","headerStyles","active","remove","Item","memo","id","useState","item","setItem","useEffect","mounted","url","className","itemStyles","aria-hidden","href","target","rel","title","by","unixTimeStamp","dateHelper","Date","year","getFullYear","month","getMonth","date","getDate","hour","getHours","min","getMinutes","timePeriod","toString","convertUnixTime","time","useScrollByIncrementing","incrementing","setIncrementing","count","setCount","resetCount","scrollThePage","window","innerHeight","documentElement","scrollTop","offsetHeight","addEventListener","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","setTimeout","debounce","removeEventListener","Items","itemIDs","slice","map","itemID","key","itemsStyles","Header","setItemIDs","newItems","setNewItems","topItems","setTopItems","bestItems","setBestItems","setType","onClick","App","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.34b11c8e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navWrapper\":\"header_navWrapper__L-ey7\",\"instruction\":\"header_instruction__1Pk0i\",\"buttons\":\"header_buttons__2Wqw8\",\"inactive\":\"header_inactive__7vkoT\",\"active\":\"header_active__oxZbY\"};","import axios from 'axios';\r\n\r\nconst baseURL = 'https://hacker-news.firebaseio.com/v0';\r\nconst newItemsURL = `${baseURL}/newstories.json`;\r\nconst topItemsURL = `${baseURL}/topstories.json`;\r\nconst bestItemsURL = `${baseURL}/beststories.json`;\r\nconst itemURL = `${baseURL}/item`;\r\nlet MAX_ITEMS = '';\r\n\r\nexport function GET_MAX_ITEMS() {\r\n  if(MAX_ITEMS) {\r\n    return MAX_ITEMS;\r\n  }\r\n}\r\n\r\n// export const getUser = async userHandle => {\r\n//   const result = await axios.get(`${baseURL}/${userHandle}`)\r\n//     .then( ({ data }) => data);\r\n\r\n//   console.log('result: ', result);\r\n  \r\n//   return result;\r\n// }\r\n\r\nexport const getItem = async storyID => {\r\n  const result = await axios.get(`${itemURL}/${storyID}.json`)\r\n    .then( ({data}) =>  data);\r\n\r\n  return result;\r\n}\r\n\r\nexport const getNewItemIDs = async () => {\r\n  const result = await axios.get(newItemsURL)\r\n    .then( ({data}) => data);\r\n\r\n  MAX_ITEMS = result.length;\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getTopItemIDs = async () => {\r\n  const result = await axios.get(topItemsURL)\r\n    .then( ({data}) => data);\r\n\r\n  MAX_ITEMS = result.length;\r\n\r\n  console.log('I got called');\r\n  \r\n  return result;\r\n}\r\n\r\nexport const getBestItemIDs = async () => {\r\n  const result = await axios.get(bestItemsURL)\r\n    .then( ({data}) => data);\r\n\r\n  MAX_ITEMS = result.length;\r\n  \r\n  return result;\r\n}","import headerStyles from '../CSS/header.module.css';\r\n\r\nexport function manageButtonClasses(type) {\r\n  switch(type) {\r\n    case 'new':\r\n      document.getElementById('new').classList.add(headerStyles.active);\r\n      document.getElementById('top').classList.remove(headerStyles.active);\r\n      document.getElementById('popular').classList.remove(headerStyles.active);\r\n    break;\r\n\r\n    case 'top':\r\n      document.getElementById('top').classList.add(headerStyles.active);\r\n      document.getElementById('new').classList.remove(headerStyles.active);\r\n      document.getElementById('popular').classList.remove(headerStyles.active);\r\n    break;\r\n\r\n    case 'popular':\r\n      document.getElementById('popular').classList.add(headerStyles.active);\r\n      document.getElementById('new').classList.remove(headerStyles.active);\r\n      document.getElementById('top').classList.remove(headerStyles.active);\r\n    break;\r\n\r\n    default:\r\n      document.getElementById('new').classList.add(headerStyles.active);\r\n      document.getElementById('top').classList.remove(headerStyles.active);\r\n      document.getElementById('popular').classList.remove(headerStyles.active);\r\n  }\r\n}","const CUTOFF = 12;\r\n\r\nexport const convertUnixTime = unixTimeStamp => {\r\n  let dateHelper = new Date(unixTimeStamp * 1000);\r\n  let months = ['Jan','Feb','Mar','Apr','May','Jun','Jul','Aug','Sep','Oct','Nov','Dec'];\r\n  let year = dateHelper.getFullYear();\r\n  let month = months[dateHelper.getMonth()];\r\n  let date = dateHelper.getDate();\r\n  let hour = dateHelper.getHours();\r\n  let min = dateHelper.getMinutes();\r\n  let timePeriod = '';\r\n\r\n  if(hour == 12) {\r\n    timePeriod = 'p.m.';\r\n  }\r\n  else if(hour > 12) {\r\n    hour -= CUTOFF;\r\n    timePeriod = 'p.m.';\r\n  }\r\n  else {\r\n    timePeriod = 'a.m.'\r\n  }\r\n\r\n  if(min.toString().length === 1) {\r\n    min = '0' + min;\r\n  }\r\n\r\n  return ` ${date} ${month}, ${year} at ${hour}:${min} ${timePeriod}`;\r\n}","import React, { useState, useEffect, memo } from 'react';\r\n\r\nimport { getItem } from '../Services/api';\r\nimport { convertUnixTime } from \"../Services/timeConverter\";\r\n\r\nimport itemStyles from '../CSS/item.module.css';\r\n\r\n// Here, we are extracting the value of each ItemID by destructuring the \"id\";\r\n// otherwise, we would need to pass in \"props\" instead of \"id\" and do\r\n// props.id down below\r\nconst Item = memo(function Item({ id }) {\r\n  const [item, setItem] = useState();\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n\r\n    getItem(id)\r\n      .then(data => data && data.url && mounted && setItem(data));\r\n\r\n    return () => mounted = false;\r\n  }, [id]);\r\n\r\n  return (\r\n    item && item.url ?\r\n      <div className={itemStyles['item']}>\r\n        <p>\r\n          <i className={`fa fa-hand-o-right ${itemStyles['pointRight']}`} aria-hidden=\"true\"></i>\r\n          <a href={item.url} target='_blank' rel=\"noopener noreferrer\">{item.title}</a>\r\n        </p>\r\n        <p>Submitted By: {item.by}</p>\r\n        <p>Posted: {convertUnixTime(item.time)}</p>\r\n      </div> : null\r\n  )\r\n});\r\n\r\nexport default Item;","import { useState, useEffect } from 'react';\r\n\r\nimport { GET_MAX_ITEMS } from '../Services/api';\r\n\r\nconst INCREMENT_VALUE = 20;\r\n\r\nexport const useScrollByIncrementing = () => {\r\n  const [incrementing, setIncrementing] = useState(false);\r\n  const [count, setCount] = useState(INCREMENT_VALUE);\r\n\r\n  const resetCount = () => {\r\n    setCount(20);\r\n  }\r\n\r\n  const scrollThePage = () => {\r\n    if(window.innerHeight + document.documentElement.scrollTop ===\r\n      document.documentElement.offsetHeight) {\r\n        setIncrementing(true);\r\n    }\r\n\r\n    setIncrementing(false);\r\n  };\r\n\r\n  function debounce(func, wait, immediate) {\r\n    let timeout;\r\n    return function() {\r\n      let context = this, args = arguments;\r\n      let later = function() {\r\n        timeout = null;\r\n        if (!immediate) func.apply(context, args);\r\n      };\r\n      let callNow = immediate && !timeout;\r\n      clearTimeout(timeout);\r\n      timeout = setTimeout(later, wait);\r\n      if (callNow) func.apply(context, args);\r\n    };\r\n  };\r\n\r\n  // First useEffect for checking if the user is scrolling the page and incrementing\r\n  // needs to take place\r\n  useEffect(() => {\r\n    if(!incrementing) {\r\n      return;\r\n    }\r\n\r\n    if(count + INCREMENT_VALUE >= GET_MAX_ITEMS) {\r\n      setCount(GET_MAX_ITEMS);\r\n    }\r\n    else {\r\n      if(count < 500) {\r\n        setCount(count + INCREMENT_VALUE);\r\n      }\r\n    }\r\n  }, [count, incrementing]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', debounce(scrollThePage, 250));\r\n\r\n    document.getElementById('new').addEventListener('click', resetCount);\r\n    document.getElementById('top').addEventListener('click', resetCount);\r\n    document.getElementById('popular').addEventListener('click', resetCount);\r\n\r\n    return () => window.removeEventListener('scroll', scrollThePage);\r\n  }, []);\r\n\r\n  return count;\r\n}","import React from 'react';\r\n\r\nimport Item from './Item';\r\n\r\nimport { GET_MAX_ITEMS } from '../Services/api';\r\nimport { useScrollByIncrementing } from '../Services/scroll';\r\n\r\nimport itemsStyles from '../CSS/items.module.css';\r\n\r\nconst Items = ({itemIDs, type}) => {\r\n  console.log('you called me?');\r\n  // console.log('type of items: ', type);\r\n  // console.log('itemIDs contains ', itemIDs);\r\n  let count = useScrollByIncrementing();\r\n\r\n  return (\r\n    <>\r\n      {itemIDs.length !== 0 ?\r\n      <>\r\n        {itemIDs.slice(0, count + 1).map(itemID => <Item key = {itemID} id = {itemID} />)}\r\n        <div className={itemsStyles['viewCount']}>Showing {count} of {GET_MAX_ITEMS()} {type} items</div>\r\n      </> :\r\n      <>\r\n        <div className={itemsStyles['viewCount']}>Loading {type} items...</div>\r\n      </> }\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Items;","import React, { useState, useEffect } from 'react';\r\n\r\nimport { getNewItemIDs, getTopItemIDs, getBestItemIDs } from '../Services/api';\r\nimport { manageButtonClasses } from '../Services/classManager';\r\n\r\nimport Items from './Items';\r\n\r\nimport headerStyles from '../CSS/header.module.css';\r\n\r\nconst Header = () => {\r\n  const [itemIDs, setItemIDs] = useState([]);\r\n  const [newItems, setNewItems] = useState(false);\r\n  const [topItems, setTopItems] = useState(false);\r\n  const [bestItems, setBestItems] = useState(false);\r\n  const [type, setType] = useState('New');\r\n\r\n  useEffect(() => {\r\n    if(newItems) {\r\n      getNewItemIDs().then(data => {\r\n          setItemIDs(data);\r\n      });\r\n      setType('New');\r\n      manageButtonClasses('new');\r\n    }\r\n    else if(topItems) {\r\n      getTopItemIDs().then(data => {\r\n          setItemIDs(data);\r\n      });\r\n      setType('Trending');\r\n      manageButtonClasses('top');\r\n    }\r\n    else if(bestItems) {\r\n      getBestItemIDs().then(data => {\r\n          setItemIDs(data);\r\n      });\r\n      setType('Popular');\r\n      manageButtonClasses('popular');\r\n    }\r\n    else {\r\n      getNewItemIDs().then(data => {\r\n          setItemIDs(data);\r\n      });\r\n      manageButtonClasses('new');\r\n    }\r\n  }, [newItems, topItems, bestItems]);\r\n\r\n  return (\r\n    <>\r\n      <div className={headerStyles['navWrapper']}>\r\n        <p className={headerStyles['instruction']}>\r\n          Search/scroll through stories below. Refresh the page to pull in the latest articles.\r\n        </p>\r\n        <div className={headerStyles['buttons']}>\r\n          <button className={headerStyles['inactive']} id='new'\r\n            onClick={() => {setNewItems(true); setTopItems(false); setBestItems(false);}}>Latest</button>\r\n          <button className={headerStyles['inactive']} id='top'\r\n            onClick={() => {setTopItems(true); setNewItems(false); setBestItems(false);}}>Trending</button>\r\n          <button className={headerStyles['inactive']} id='popular'\r\n            onClick={() => {setBestItems(true); setNewItems(false); setTopItems(false);}}>Most Popular</button>\r\n        </div>\r\n      </div>\r\n      <Items itemIDs={itemIDs} type={type} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Components/Header';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pointRight\":\"item_pointRight__2FPdv\",\"item\":\"item_item__2jcg9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"viewCount\":\"items_viewCount__y5Dzy\"};"],"sourceRoot":""}